diff --git a/views/elements/packagecheck.ctp b/views/elements/packagecheck.ctp
index 95b499d..8037cb5 100755
--- a/views/elements/packagecheck.ctp
+++ b/views/elements/packagecheck.ctp
@@ -46,7 +46,26 @@ switch ($PackageCheck['type']) {
 		}
 		break;
 	case CHECK_TYPE_UNINSTALL:
-		$out .= "Uninstall Exists For \"" . $PackageCheck['path'] . "\"";
+		$out .= "Uninstall ";
+		switch ($PackageCheck['condition']) {
+			case CHECK_CONDITION_UNINSTALL_EXISTS: $out .= " Exists ".$PackageCheck['path']; break;
+			case CHECK_CONDITION_UNINSTALL_VERSION_SMALLER_THAN: $out .= $PackageCheck['path']." < " . $PackageCheck['value']; break;
+			case CHECK_CONDITION_UNINSTALL_LESS_THAN_OR_EQUAL_TO: $out .= $PackageCheck['path']." &le; " . $PackageCheck['value']; break;
+			case CHECK_CONDITION_UNINSTALL_EQUAL_TO: $out .= $PackageCheck['path']." = " . $PackageCheck['value']; break;
+			case CHECK_CONDITION_UNINSTALL_GREATER_THAN: $out .= $PackageCheck['path']." > " . $PackageCheck['value']; break;
+			case CHECK_CONDITION_UNINSTALL_GREATER_THAN_OR_EQUAL_TO: $out .= $PackageCheck['path']." &ge; " . $PackageCheck['value']; break;
+			default: $out .= "Unknown";
+		}
+		break;
+	case CHECK_TYPE_HOST:
+		$out .= "Host ";
+		switch ($PackageCheck['condition']) {
+			case CHECK_CONDITION_HOST_HOSTNAME: $out .= " Hostname ". $PackageCheck['value']; break;
+			case CHECK_CONDITION_HOST_OS: $out .= " OS ". $PackageCheck['value']; break;
+			case CHECK_CONDITION_HOST_ARCHITECTURE: $out .= " Architecture ". $PackageCheck['value']; break;
+			case CHECK_CONDITION_HOST_ENVIRONMENT: $out .= " Environment ". $PackageCheck['value']; break;
+			default: $out .= "Unknown";
+		}
 		break;
 	case CHECK_TYPE_EXECUTE:
 		$out .= "Execute \"" . $PackageCheck['path'] . "\" and ensure the returned exit code ";
diff --git a/views/packages/check-add.ctp b/views/packages/check-add.ctp
index 8afc81b..f2cabc7 100755
--- a/views/packages/check-add.ctp
+++ b/views/packages/check-add.ctp
@@ -33,8 +33,15 @@
 			break;
 		case CHECK_TYPE_UNINSTALL:
 			$width = 136;
-			$showValue = false;
+			$showValue = true;
 			$pathLabel = "Add/Remove Name:";
+			if ($checkTypeCond == CHECK_CONDITION_UNINSTALL_EXISTS)
+				$showValue = false;
+			break;
+		case CHECK_TYPE_HOST:
+			$width = 136;
+			$showValue = true;
+			$showPath = false;
 			break;
 		case CHECK_TYPE_REGISTRY:
 			if ($checkTypeCond == CHECK_CONDITION_REGISTRY_EXISTS)
@@ -67,7 +74,7 @@
 
 <div class="inputwrap"><label for="PackageCheckType" title="<?php echo TOOLTIP_PACKAGECHECK_TYPE; ?>"><span class="required">*</span>Type:</label>
 	<?php if (isset($logicalChecks)): ?>
-		<?php echo $form->input('type', array('label' => false, 'selected' => $checkType, 'options' => array(CHECK_TYPE_REGISTRY => 'Registry', CHECK_TYPE_FILE => 'File', CHECK_TYPE_UNINSTALL => 'Uninstall', CHECK_TYPE_LOGICAL => 'Logical', CHECK_TYPE_EXECUTE => 'Execute'), 'div' => false, 'onchange' => 'window.location.href = "' . HtmlHelper::url("add/check/$pkgId") . '/type:" + document.getElementById("PackageCheckType").value;')) ?>
+		<?php echo $form->input('type', array('label' => false, 'selected' => $checkType, 'options' => array(CHECK_TYPE_REGISTRY => 'Registry', CHECK_TYPE_FILE => 'File', CHECK_TYPE_UNINSTALL => 'Uninstall',CHECK_TYPE_HOST => 'Host', CHECK_TYPE_LOGICAL => 'Logical', CHECK_TYPE_EXECUTE => 'Execute'), 'div' => false, 'onchange' => 'window.location.href = "' . HtmlHelper::url("add/check/$pkgId") . '/type:" + document.getElementById("PackageCheckType").value;')) ?>
 	<?php else: ?>
 		Logical<?php echo $form->hidden('type', array('label' => false, 'selected' => $checkType, 'options' => array(CHECK_TYPE_LOGICAL => 'Logical'), 'div' => false)) ?>
 	<?php endif; ?>
diff --git a/views/packages/check-edit.ctp b/views/packages/check-edit.ctp
index 25796bc..9c5ec1e 100755
--- a/views/packages/check-edit.ctp
+++ b/views/packages/check-edit.ctp
@@ -19,8 +19,9 @@
  * along with wpkgExpress.  If not, see <http://www.gnu.org/licenses/>.
  *
  */
-?>
-<?php
+?>
+
+<?php 
 	$width = 75;
 	$value_width = 80;
 	$pathLabel = "Path: ";
@@ -34,8 +35,15 @@
 			break;
 		case CHECK_TYPE_UNINSTALL:
 			$width = 136;
-			$showValue = false;
+			$showValue = true;
 			$pathLabel = "Add/Remove Name:";
+			if ($checkTypeCond == CHECK_CONDITION_UNINSTALL_EXISTS)
+				$showValue = false;
+			break;
+		case CHECK_TYPE_HOST:
+			$width = 136;
+			$showValue = true;
+			$showPath = false;
 			break;
 		case CHECK_TYPE_REGISTRY:
 			if ($checkTypeCond == CHECK_CONDITION_REGISTRY_EXISTS)
@@ -68,7 +76,7 @@
 
 <div class="inputwrap"><label for="PackageCheckType" title="<?php echo TOOLTIP_PACKAGECHECK_TYPE; ?>"><span class="required">*</span>Type:</label>
 	<?php if (isset($logicalChecks)): ?>
-		<?php echo $form->input('type', array('label' => false, 'selected' => $checkType, 'options' => array(CHECK_TYPE_REGISTRY => 'Registry', CHECK_TYPE_FILE => 'File', CHECK_TYPE_UNINSTALL => 'Uninstall', CHECK_TYPE_LOGICAL => 'Logical', CHECK_TYPE_EXECUTE => 'Execute'), 'div' => false, 'onchange' => 'window.location.href = "' . HtmlHelper::url("edit/check/$pkgChkId") . '/type:" + document.getElementById("PackageCheckType").value;')) ?>
+		<?php echo $form->input('type', array('label' => false, 'selected' => $checkType, 'options' => array(CHECK_TYPE_REGISTRY => 'Registry', CHECK_TYPE_FILE => 'File', CHECK_TYPE_UNINSTALL => 'Uninstall',CHECK_TYPE_HOST => 'Host', CHECK_TYPE_LOGICAL => 'Logical', CHECK_TYPE_EXECUTE => 'Execute'), 'div' => false, 'onchange' => 'window.location.href = "' . HtmlHelper::url("edit/check/$pkgChkId") . '/type:" + document.getElementById("PackageCheckType").value;')) ?>
 	<?php else: ?>
 		Logical<?php echo $form->hidden('type', array('label' => false, 'selected' => $checkType, 'options' => array(CHECK_TYPE_LOGICAL => 'Logical'), 'div' => false)) ?>
 	<?php endif; ?>
diff --git a/views/packages/xml/index.ctp b/views/packages/xml/index.ctp
index ef40b97..c865318 100755
--- a/views/packages/xml/index.ctp
+++ b/views/packages/xml/index.ctp
@@ -143,9 +143,51 @@ foreach ($packages as $package) {
 					break;
 				case CHECK_TYPE_UNINSTALL:
 					$type = "uninstall";
-					$condition = "exists";
+					switch ($check['condition']) {
+						case CHECK_CONDITION_UNINSTALL_EXISTS:
+							$condition = "exists";
+							break;
+						case CHECK_CONDITION_UNINSTALL_VERSION_SMALLER_THAN:
+							$condition = "versionsmallerthan";
+							$value = $check['value'];
+							break;
+						case CHECK_CONDITION_UNINSTALL_LESS_THAN_OR_EQUAL_TO:
+							$condition = "versionlessorequal";
+							$value = $check['value'];
+							break;
+						case CHECK_CONDITION_UNINSTALL_EQUAL_TO:
+							$condition = "versionequalto";
+							$value = $check['value'];
+							break;
+						case CHECK_CONDITION_UNINSTALL_GREATER_THAN:
+							$condition = "versiongreaterthan";
+							$value = $check['value'];
+							break;
+						case CHECK_CONDITION_UNINSTALL_GREATER_THAN_OR_EQUAL_TO:
+							$condition = "versiongreaterorequal";
+							$value = $check['value'];
+							break;
+					}					
 					$path = $check['path'];
 					break;
+				case CHECK_TYPE_HOST:
+					$type = "host";
+					switch ($check['condition']) {
+						case CHECK_CONDITION_HOST_HOSTNAME:
+							$condition = "hostname";
+							break;
+						case CHECK_CONDITION_HOST_OS:
+							$condition = "os";
+							break;
+						case CHECK_CONDITION_HOST_ARCHITECTURE:
+							$condition = "architecture";
+							break;
+						case CHECK_CONDITION_HOST_ENVIRONMENT:
+							$condition = "environment";
+							break;
+					}					
+					$value = $check['value'];
+					break;
 				default:
 					$type = "unknown";
 					$condition = "unknown";
diff --git a/wpkg_constants.php b/wpkg_constants.php
index 8358581..5af5d75 100755
--- a/wpkg_constants.php
+++ b/wpkg_constants.php
@@ -56,6 +56,7 @@ define('CHECK_TYPE_REGISTRY', 1);
 define('CHECK_TYPE_FILE', 2);
 define('CHECK_TYPE_UNINSTALL', 3);
 define('CHECK_TYPE_EXECUTE', 4);
+define('CHECK_TYPE_HOST', 5);
 
 // Package Check Conditions
 define('CHECK_CONDITION_LOGICAL_NOT', 0);
@@ -82,7 +83,17 @@ define('CHECK_CONDITION_EXECUTE_EXIT_CODE_GREATER_THAN', 17);
 define('CHECK_CONDITION_EXECUTE_EXIT_CODE_GREATER_THAN_OR_EQUAL_TO', 18);
 
 define('CHECK_CONDITION_UNINSTALL_EXISTS', 19);
-
+define('CHECK_CONDITION_UNINSTALL_VERSION_SMALLER_THAN', 20);
+define('CHECK_CONDITION_UNINSTALL_LESS_THAN_OR_EQUAL_TO', 21);
+define('CHECK_CONDITION_UNINSTALL_EQUAL_TO', 22);
+define('CHECK_CONDITION_UNINSTALL_GREATER_THAN', 23);
+define('CHECK_CONDITION_UNINSTALL_GREATER_THAN_OR_EQUAL_TO', 24);
+
+define('CHECK_CONDITION_HOST_HOSTNAME', 25);
+define('CHECK_CONDITION_HOST_OS', 26);
+define('CHECK_CONDITION_HOST_ARCHITECTURE', 27);
+define('CHECK_CONDITION_HOST_ENVIRONMENT', 28);
+
 // Variable Owner Type
 define('VARIABLE_TYPE_PACKAGE', 0);
 define('VARIABLE_TYPE_PROFILE', 1);
